====================================================================
Nested Serializer
====================================================================
from django.db import models

# Create your models here.
class Singer(models.Model):
 name = models.CharField(max_length=100)
 gender = models.CharField(max_length=100)

 def __str__(self):
  return self.name

class Song(models.Model):
 title = models.CharField(max_length=100)
 singer = models.ForeignKey(Singer, on_delete=models.CASCADE, related_name='sungby')
 duration = models.IntegerField()

 def __str__(self):
  return self.title

from django.contrib import admin
from .models import Singer, Song
# Register your models here.
@admin.register(Singer)
class SingerAdmin(admin.ModelAdmin):
 list_display = ['id', 'name', 'gender']

@admin.register(Song)
class SongAdmin(admin.ModelAdmin):
 list_display = ['id', 'title', 'singer', 'duration']

from .models import Singer, Song
from rest_framework import serializers

class SongSerializer(serializers.ModelSerializer):
 class Meta:
  model = Song
  fields = ['id', 'title', 'singer', 'duration']

class SingerSerializer(serializers.ModelSerializer):
 sungby = SongSerializer(many=True, read_only=True)
 class Meta:
  model = Singer
  fields = ['id', 'name', 'gender', 'sungby']
from django.shortcuts import render
from .serializers import SingerSerializer, SongSerializer
from rest_framework import viewsets
from .models import Singer, Song

class SingerViewSet(viewsets.ModelViewSet):
 queryset = Singer.objects.all()
 serializer_class = SingerSerializer

class SongViewSet(viewsets.ModelViewSet):
 queryset = Song.objects.all()
 serializer_class = SongSerializer



from django.contrib import admin
from django.urls import path, include
from api import views
from rest_framework.routers import DefaultRouter

# Creating Router Object
router = DefaultRouter()

# Register StudentViewSet with Router
router.register('singer', views.SingerViewSet, basename='singer')
router.register('song', views.SongViewSet, basename='song')

urlpatterns = [
    path('admin/', admin.site.urls),
    path('', include(router.urls)),
    path('auth/', include('rest_framework.urls', namespace='rest_framework')),
]



====================================================================
Throttling
====================================================================

from django.db import models

# Create your models here.
class Student(models.Model):
 name = models.CharField(max_length=50)
 roll = models.IntegerField()
 city = models.CharField(max_length=50)
 

from django.contrib import admin
from .models import Student
# Register your models here.

@admin.register(Student)
class StudentAdmin(admin.ModelAdmin):
 list_display = ['id', 'name', 'roll', 'city']
 
from rest_framework import serializers
from .models import Student

class StudentSerializer(serializers.ModelSerializer):
 class Meta:
  model = Student
  fields = ['id', 'name', 'roll', 'city']

from .models import Student
from .serializers import StudentSerializer
from rest_framework import viewsets
from rest_framework.permissions import IsAuthenticatedOrReadOnly
from rest_framework.authentication import SessionAuthentication
from rest_framework.throttling import AnonRateThrottle, UserRateThrottle


class StudentModelViewSet(viewsets.ModelViewSet):
  queryset = Student.objects.all()
  serializer_class = StudentSerializer
  authentication_classes=[SessionAuthentication]
  permission_classes=[IsAuthenticatedOrReadOnly]
  

from django.contrib import admin
from django.urls import path, include
from app1 import views
from rest_framework.routers import DefaultRouter

# Creating Router Object
router = DefaultRouter()

# Register StudentViewSet with Router
router.register('studentapi', views.StudentModelViewSet, basename='student')

urlpatterns = [
    path('admin/', admin.site.urls),
    path('', include(router.urls)),
    path('auth/', include('rest_framework.urls', namespace='rest_framework'))
]




___________________________________________________________________________________
throttle_classes = [AnonRateThrottle, UserRateThrottle]

throttle_classes = [AnonRateThrottle, JackRateThrottle]

REST_FRAMEWORK = {
    'DEFAULT_THROTTLE_RATES':{
        'anon': '2/day',
        'user': '5/hour',
		'chanti': '3/minute'
    }
}

throttling.py:
==============

from rest_framework.throttling import UserRateThrottle

class ChantiRateThrottle(UserRateThrottle):
 scope = 'chanti'