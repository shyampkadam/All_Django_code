Paginatation with Django: (djangoapp22)
=========================
models.py:
-----------
from django.db import models
class Book(models.Model):
    name=models.CharField(max_length=10)
    nop=models.IntegerField()
    cost=models.FloatField()
    def __str__(self):
        return self.name
    class Meta:
        db_table='book'
		
views.py:
---------
from django.core.paginator import Paginator, EmptyPage, PageNotAnInteger

def insertBooks(request):
    a,b,c='',100,500.0
    for i in range(1,100):
        a='book'+str(i)
        b=b+i
        c=c+i
        book=Book(name=a,nop=b,cost=c)
        print(book)
        book.save()
    return HttpResponse('<h1>INSERTED</h1>')

def index(request):
    book_list = Book.objects.all()
    page = request.GET.get('page', 1)

    paginator = Paginator(book_list, 10)
    try:
        books = paginator.page(page)
    except PageNotAnInteger:
        books = paginator.page(1)
    except EmptyPage:
        books = paginator.page(paginator.num_pages)

    return render(request, 'book_list.html', { 'books': books })


book_list.html:
---------------
<!DOCTYPE html>
<html>
<head>
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
</head>
<body>
<table class="table table-bordered">
  <thead>
    <tr>
      <th>Name</th>
      <th>NOP</th>
      <th>COST</th>
    </tr>
  </thead>
  <tbody>
    {% for book in books %}
      <tr>
        <td>{{ book.name }}</td>
        <td>{{ book.nop }}</td>
        <td>{{ book.cost }}</td>
      </tr>
    {% endfor %}
  </tbody>
</table>

{% if books.has_other_pages %}
  <ul class="pagination">
    {% if books.has_previous %}
      <li><a href="?page={{ books.previous_page_number }}">&laquo;</a></li>
    {% else %}
      <li class="disabled"><span>&laquo;</span></li>
    {% endif %}
    {% for i in books.paginator.page_range %}
      {% if books.number == i %}
        <li class="active"><span>{{ i }} <span class="sr-only">(current)</span></span></li>
      {% else %}
        <li><a href="?page={{ i }}">{{ i }}</a></li>
      {% endif %}
    {% endfor %}
    {% if books.has_next %}
      <li><a href="?page={{ books.next_page_number }}">&raquo;</a></li>
    {% else %}
      <li class="disabled"><span>&raquo;</span></li>
    {% endif %}
  </ul>
{% endif %}
</body>
</html>


urls.py:
--------

from django.conf.urls import url

from .views import index,insertBooks
from django.contrib import admin
urlpatterns = [
    url('admin/', admin.site.urls),
    url(r'$^', index),
    url(r'save/', insertBooks),
]
-------------------------------------------------------------------------------------------
Mail Sending with Django:(djangapp23)
=========================
settings.py:
-----------
EMAIL_BACKEND ='django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_USE_TLS = True
EMAIL_PORT = 587
EMAIL_HOST_USER = 'chantifacts3@gmail.com'
EMAIL_HOST_PASSWORD = '$$$$$$$$$$$$$$$$$$$$$$'


forms.py:
--------
from django import forms

class SubscribeForm(forms.Form):
    Email = forms.EmailField()

    def __str__(self):
        return self.Email
		
views.py:
--------
from django.shortcuts import render
from djangoproject3.settings import EMAIL_HOST_USER
from . import forms
from django.core.mail import send_mail
def composemail(request):
    sub = forms.SubscribeForm()
    if request.method == 'POST':
        sub = forms.SubscribeForm(request.POST)
        subject = 'Testing Mail From Django App'
        message = 'Hope you are enjoying your Django Mail Send Session'
        recepient = str(sub['Email'].value())
        send_mail(subject,message, EMAIL_HOST_USER, [recepient], fail_silently = False)
        return render(request, 'success.html', {'recepient': recepient})
    return render(request, 'index.html', {'form':sub})


index.html:
-----------
<!DOCTYPE html>
<html>
<head>
    <title>Django send email</title>
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
</head>
<body>
    <center>
        <h1 class = 'alert alert-success'>Mail Send Form</h1>
    <form method="POST">
        {% csrf_token %}
        <div class = "form-group">
            <p>    <h3>{{ form.as_p }}</h3></p>
            <br>
            <input type="submit" name="Send" class = 'btn btn-primary btn-lg'>
        </div>
    </form>
    </center>
</body>
</html>


success.html:
------------
<!DOCTYPE html>
<html>
<head>
    <title>Success</title>
</head>
<body>
    <h1>email sent successfully to: {{ recepient   }}</h1>
</body>
</html>


urls.py:
--------

from django.contrib import admin
from django.urls import path
from app1.views import composemail
urlpatterns = [
    path('admin/', admin.site.urls),
    path('', composemail, name = 'composemail'),
]

		
		